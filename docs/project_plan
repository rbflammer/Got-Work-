Got work?

Project Overview

This website aims to allow customers to search for workers to mow their lawns, shovel snow, or rake leaves. 
The website will allow users to request that one or more of these certain jobs get done at their home. At 
which time one of the employees loacted within the area will accept the job and be given further details. 
After the work has been completed, the employee can be rated one their work.


Team Organization

Project manager: Matthew Hill (Will change througout project)
Designers and Developers: Aryan Osqueezadeh, Jacob Holbrook,Bryce Flammer

Software Development Process

The development will be broken up into five phases. Each phase will be a little like a Sprint in an Agile
method and a little like an iteration in a Spiral process.  Specifically, each phase will be like a Sprint, in
that work to be done will be organized into small tasks, placed into a “backlog”, and prioritized. Then,
using on time-box scheduling, the team will decide which tasks the phase (Sprint) will address.  The team
will use a Scrum Board to keep track of tasks in the backlog, those that will be part of the current Sprint,
those in progress, and those that are done.
Each phase will also be a little like an iteration in a Spiral process, in that each phase will include some
risk analysis and that any development activity (requirements capture, analysis, design, implementation,
etc.) can be done during any phase.  Early phases will focus on understanding (requirements capture and
analysis) and subsequent phases will focus on design and implementation.  Each phase will include a
retrospective.

Phase Iteration

1. Phase 1 - Requirements Capture

2. Phase 2 - Analysis, Architectural, UI, and DB Design

3 Phase 3 - Implementation, and Unit Testing

4 Phase 4 - More Implementation and Testing

We will use Unified Modeling Language (UML) to document user goals, structural concepts, component
interactions, and behaviors.

COMMUNICATION POLICIES, PROCEDURES, AND TOOLS

Discord – Main channel for communication. Used for group calls, file sharing, and other collaborative
activities.

GitHub – Formal repository used for submissions, version control, data tracking, and communication
with Professor Dan Watson and Rob Johnson.

Risk Analysis

● Database Structure
o Likelihood – Low
o Severity – Very High
o Consequences –  Ineffective data tracking leading to confusion concerning balances,
transactions, account information, etc.
o Work-Around – None. System loses value and functionality without proper database
implementation.

● Login
o Likelihood – Low
o Severity – Med-High
o Consequences – Dissatisfactory customer experience concerning preferences,
transaction information, cancellations, and current balance.
o Work-Around –

● Verification System
o Likelihood – Low
o Severity – Med
o Consequences – Lack of security concerning exchange of work services.
o Work-Around – Verify the client is connected to correct worker.

● UI
o Likelihood –  Low
o Severity – Very High
o Consequences – Inability to interact with users in a clear and efficient way.
o Work-Around – None. System loses value and functionality if users are not able to
interact with it.

● Hosting
o Likelihood – Low
o Severity – Med
o Consequences – Inability for system to host or serve information essential for system
functionality
o Work-Around – Host system through a hosting service


Configuration Management
See the README.md in the Git repository.

